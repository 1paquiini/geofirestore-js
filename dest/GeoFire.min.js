function log(e){GEOFIRE_DEBUG&&console.log(e)}var BASE32="0123456789bcdefghjkmnpqrstuvwxyz",deg2rad=function(e){return e*Math.PI/180},dist=function(e,t){var i,n,r=e[0],o=e[1],a=t[0],s=t[1],c=6371,l=deg2rad(a-r),u=deg2rad(s-o);return i=Math.sin(l/2)*Math.sin(l/2)+Math.cos(deg2rad(r))*Math.cos(deg2rad(a))*Math.sin(u/2)*Math.sin(u/2),n=2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i)),c*n},encodeGeohash=function(e,t){var i,n,r,o={min:-90,max:90},a={min:-180,max:180},s=e[0],c=e[1],l="",u=0,f=0,h=1;if(t=Math.min(t||12,22),s<o.min||s>o.max)throw"Invalid latitude specified! ("+s+")";if(c<a.min||c>a.max)throw"Invalid longitude specified! ("+c+")";for(;l.length<t;)i=h?c:s,n=h?a:o,r=(n.min+n.max)/2,i>r?(u=(u<<1)+1,n.min=r):(u=(u<<1)+0,n.max=r),h=!h,4>f?f++:(f=0,l+=BASE32[u].toString(),u=0);return l},GEOFIRE_DEBUG=!0;console.log("Note: debug set to "+GEOFIRE_DEBUG);var validateKey=function(e){return new RSVP.Promise(function(t,i){var n;"string"!=typeof e&&(n="key must be a string"),void 0!==n?i("Invalid key '"+e+"': "+n):t()})},validateLocation=function(e){return new RSVP.Promise(function(t,i){var n;if(null===e&&t(),e instanceof Array&&2===e.length){var r=e[0],o=e[1];"number"!=typeof r||-90>r||r>90?n="latitude must be a number within the range [-90, 90]":("number"!=typeof o||-180>o||o>180)&&(n="longitude must be a number within the range [-180, 180]")}else n="expected 2 values, got "+e.length;void 0!==n?i("Invalid location ["+e+"]: "+n):t()})},updateFirebaseIndex=function(e,t,i){return log("updateFirebaseIndex() called"),new RSVP.Promise(function(n,r){null===i&&n(),e.child("indices/"+encodeGeohash(i,12)).set(t,function(e){e?r("Firebase synchronization failed: "+e):(log("write to /indices/"),n())})})},updateFirebaseLocation=function(e,t,i,n){log("updateFirebaseLocation() called");var r=function(){return new RSVP.Promise(function(i,r){void 0!==n[t]?e.child("indices/"+encodeGeohash(n[t].split(",").map(Number),12)).remove(function(e){e?r("Firebase synchronization failed: "+e):(log("removal of /indices/"),i())}):i()}.bind(this))},o=function(){return new RSVP.Promise(function(n,r){e.child("locations/"+t).set(i?i.toString():null,function(e){e?r("Firebase synchronization failed: "+e):(log("write to /locations/"),n())})})};return r().then(function(){return o()})},GeoCallbackRegistration=function(e){if("function"!=typeof e)throw new Error("GeoCallbackRegistration.cancel() callback must be a function.");this._cancelCallback=e};GeoCallbackRegistration.prototype.cancel=function(){this._cancelCallback(),delete this._cancelCallback};var GeoQuery=function(e,t){this._saveQueryCriteria(t),this._firebaseRef=e,this._callbacks={key_entered:[],key_left:[],key_moved:[]},this._locationsInQuery={},this._allLocations={},this._firebaseRef.child("indices").on("child_added",function(e){var t=e.val();this._firebaseRef.child("locations/"+t).once("value",function(e){var i=e.val().split(",").map(Number);this._allLocations[t]=i,this._fireCallbacks(t,i)}.bind(this))}.bind(this)),this._firebaseRef.child("locations").on("child_removed",function(e){var t=e.name();void 0!==this._locationsInQuery[t]&&(this._callbacks.key_left.forEach(function(e){e(t,this._allLocations[t])}.bind(this)),delete this._allLocations[t])}.bind(this))};GeoQuery.prototype._fireCallbacks=function(e,t){var i=void 0!==this._locationsInQuery[e],n=dist(t,this._center)<=this._radius;!i&&n?(log(e+" entered GeoQuery"),this._callbacks.key_entered.forEach(function(i){i(e,t)}),this._locationsInQuery[e]=t):i&&!n?(log(e+" left GeoQuery"),this._callbacks.key_left.forEach(function(i){i(e,t)}),delete this._locationsInQuery[e]):i&&(log(e+" moved within GeoQuery"),this._callbacks.key_moved.forEach(function(i){i(e,t)}),this._locationsInQuery[e]=t)},GeoQuery.prototype.getResults=function(){return new RSVP.Promise(function(e){var t=[];for(var i in this._locationsInQuery)this._locationsInQuery.hasOwnProperty(i)&&t.push([i,this._locationsInQuery[i]]);e(t)}.bind(this))},GeoQuery.prototype.on=function(e,t){if(-1===["key_entered","key_left","key_moved"].indexOf(e))throw new Error('Event type must be "key_entered", "key_left", or "key_moved"');if("function"!=typeof t)throw new Error("Event callback must be a function.");if(this._callbacks[e].push(t),"key_entered"===e)for(var i in this._locationsInQuery)this._locationsInQuery.hasOwnProperty(i)&&t(i,this._locationsInQuery[i]);return new GeoCallbackRegistration(function(){this._callbacks[e].splice(this._callbacks[e].indexOf(t),1)}.bind(this))},GeoQuery.prototype.cancel=function(){this._callbacks={key_entered:[],key_left:[],key_moved:[]},this._firebaseRef.child("indices").off(),this._firebaseRef.child("locations").off()},GeoQuery.prototype.updateQueryCriteria=function(e){this._saveQueryCriteria(e);for(var t in this._allLocations)this._allLocations.hasOwnProperty(t)&&this._fireCallbacks(t,this._allLocations[t])},GeoQuery.prototype._saveQueryCriteria=function(e){if(void 0===e.type)throw new Error('No "type" attribute specified for query criteria.');if("circle"!==e.type&&"square"!==e.type)throw new Error('Invalid "type" attribute specified for query criteria. Valid types are "circle" and "square".');if(void 0===e.center)throw new Error('No "center" attribute specified for query criteria.');if(!(e.center instanceof Array&&2===e.center.length))throw new Error('Invalid "center" attribute specified for query criteria. Expected array of length 2, got '+e._center.length);var t=e.center[0],i=e.center[1];if("number"!=typeof t||-90>t||t>90)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be a number within the range [-90, 90]');if("number"!=typeof i||-180>i||i>180)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be a number within the range [-180, 180]');if(void 0===e.radius)throw new Error('No "radius" attribute specified for query criteria.');if("number"!=typeof e.radius||e.radius<0)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be a number greater than or equal to 0.');this._type=e.type,this._center=e.center,this._centerHash=encodeGeohash(e.center,12),this._radius=e.radius};var GeoFire=function(e){this._firebaseRef=e,this._allLocations={},this._firebaseRef.child("locations").on("child_added",function(e){this._allLocations[e.name()]=e.val()}.bind(this)),this._firebaseRef.child("locations").on("child_removed",function(e){delete this._allLocations[e.name()]}.bind(this))};GeoFire.prototype.set=function(e,t){return log("set("+e+", ["+t+"]) called"),RSVP.all([validateKey(e),validateLocation(t)]).then(function(){return updateFirebaseLocation(this._firebaseRef,e,t,this._allLocations)}.bind(this)).then(function(){return updateFirebaseIndex(this._firebaseRef,e,t)}.bind(this))},GeoFire.prototype.get=function(e){return log("get("+e+") called"),validateKey(e).then(function(){return new RSVP.Promise(function(t,i){this._firebaseRef.child("locations/"+e).once("value",function(e){t(e.val()?e.val().split(",").map(Number):null)},function(e){i(e)})}.bind(this))}.bind(this))},GeoFire.prototype.remove=function(e){return this.set(e,null)},GeoFire.prototype.query=function(e){return new GeoQuery(this._firebaseRef,e)},"undefined"!=typeof module&&(module.exports=GeoFire);