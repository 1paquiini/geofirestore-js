var GeoFire=function(){"use strict";var e=function(e){return e*Math.PI/180},n=function(n,t){var r,i,o=n[0],u=n[1],a=t[0],c=t[1],f=6371,d=e(a-o),s=e(c-u);return r=Math.sin(d/2)*Math.sin(d/2)+Math.cos(e(o))*Math.cos(e(a))*Math.sin(s/2)*Math.sin(s/2),i=2*Math.atan2(Math.sqrt(r),Math.sqrt(1-r)),f*i},t=function(e,n){var t={min:-90,max:90},r={min:-180,max:180},i=e[0],o=e[1],u="",a=0,c=0,f=1;if(n=Math.min(n||12,22),i<t.min||i>t.max)throw"Invalid latitude specified! ("+i+")";if(o<r.min||o>r.max)throw"Invalid longitude specified! ("+o+")";for(;u.length<n;){var d=f?o:i,s=f?r:t,l=(s.min+s.max)/2;d>l?(a=(a<<1)+1,s.min=l):(a=(a<<1)+0,s.max=l),f=!f,4>c?c++:(c=0,u+="0123456789bcdefghjkmnpqrstuvwxyz"[a],a=0)}return u},r=12,i=function(e){if(this.cancel=function(){"undefined"!=typeof n&&(n(),n=void 0)},"function"!=typeof e)throw new Error("GeoCallbackRegistration.cancel() callback must be a function.");var n=e},o=function(e,o){function u(e){for(var n in e)if(e.hasOwnProperty(n)&&"center"!==n&&"radius"!==n)throw new Error('Unexpected "'+n+'" attribute found in query criteria.');if("undefined"!=typeof e.center){if(!(e.center instanceof Array&&2===e.center.length))throw new Error('Invalid "center" attribute specified for query criteria. Expected array of length 2, got '+e._center.length);var i=e.center[0],o=e.center[1];if("number"!=typeof i)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be a number.');if(-90>i||i>90)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be within the range [-90, 90].');if("number"!=typeof o)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be a number.');if(-180>o||o>180)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be within the range [-180, 180].')}if("undefined"!=typeof e.radius){if("number"!=typeof e.radius)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be a number.');if(e.radius<0)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be greater than or equal to 0.')}c=e.center||c,d=t(c,r),f=e.radius||f}function a(e,t){var r=void 0!==h[e],i=n(t,c)<=f;!r&&i?(l.key_entered.forEach(function(n){n(e,t)}),h[e]=t):r&&!i?(l.key_left.forEach(function(n){n(e,t)}),delete h[e]):r&&(l.key_moved.forEach(function(n){n(e,t)}),h[e]=t)}if(this.results=function(){return new RSVP.Promise(function(e){var n=[];for(var t in h)h.hasOwnProperty(t)&&n.push({key:t,location:h[t]});e(n)})},this.on=function(e,n){if(-1===["key_entered","key_left","key_moved"].indexOf(e))throw new Error('Event type must be "key_entered", "key_left", or "key_moved"');if("function"!=typeof n)throw new Error("Event callback must be a function.");if(l[e].push(n),"key_entered"===e)for(var t in h)h.hasOwnProperty(t)&&n(t,h[t]);return new i(function(){l[e].splice(l[e].indexOf(n),1)})},this.cancel=function(){l={key_entered:[],key_left:[],key_moved:[]},s.child("indices").off("child_added"),s.child("locations").off("child_removed")},this.updateCriteria=function(e){u(e);for(var n in m)m.hasOwnProperty(n)&&a(n,m[n])},this.center=function(){return c},this.radius=function(){return f},"undefined"==typeof o.center)throw new Error('No "center" attribute specified for query criteria.');if("undefined"==typeof o.radius)throw new Error('No "radius" attribute specified for query criteria.');var c,f,d,s=e,l={key_entered:[],key_left:[],key_moved:[]},h={},m={};u(o),s.child("indices").on("child_added",function(e){var n=e.name(),t=n.slice(r);s.child("locations/"+t).once("value",function(e){var n=e.val().split(",").map(Number);m[t]=n,a(t,n)})}),s.child("locations").on("child_removed",function(e){var n=e.name();void 0!==h[n]&&(l.key_left.forEach(function(e){e(n,m[n])}),delete m[n])})},u=function(e){function n(e){return new RSVP.Promise(function(n,t){var r;"string"!=typeof e&&"number"!=typeof e&&(r="key must be a string or a number"),void 0!==r?t("Error: Invalid key '"+e+"': "+r):n()})}function i(e){return new RSVP.Promise(function(n,t){var r;if(null===e&&n(),e instanceof Array&&2===e.length){var i=e[0],o=e[1];"number"!=typeof i?r="latitude must be a number":-90>i||i>90?r="latitude must be within the range [-90, 90]":"number"!=typeof o?r="longitude must be a number":(-180>o||o>180)&&(r="longitude must be within the range [-180, 180]")}else r="expected 2 values, got "+e.length;void 0!==r?t("Error: Invalid location ["+e+"]: "+r):n()})}function u(e,n){return new RSVP.Promise(function(i,o){null===n&&i(),c.child("indices/"+t(n,r)+e).set(!0,function(e){e?o("Error: Firebase synchronization failed: "+e):i()})})}function a(e,n){function i(){return new RSVP.Promise(function(n,i){void 0!==f[e]?c.child("indices/"+t(f[e].split(",").map(Number),r)+e).remove(function(e){e?i("Error: Firebase synchronization failed: "+e):n()}):n()})}function o(){return new RSVP.Promise(function(t,r){c.child("locations/"+e).set(n?n.toString():null,function(e){e?r("Error: Firebase synchronization failed: "+e):t()})})}return i().then(function(){return o()})}this.set=function(e,t){return RSVP.all([n(e),i(t)]).then(function(){return a(e.toString(),t)}).then(function(){return u(e.toString(),t)})},this.get=function(e){return n(e).then(function(){return new RSVP.Promise(function(n,t){c.child("locations/"+e.toString()).once("value",function(e){n(e.val()?e.val().split(",").map(Number):null)},function(e){t("Error: Firebase synchronization failed: "+e)})})})},this.remove=function(e){return this.set(e,null)},this.query=function(e){return new o(c,e)};var c=e,f={};c.child("locations").on("child_added",function(e){f[e.name()]=e.val()}),c.child("locations").on("child_removed",function(e){delete f[e.name()]})};return u}();"undefined"!=typeof module&&(module.exports=GeoFire);