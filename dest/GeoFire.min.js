var GeoFire=function(){"use strict";var e=function(e){if(this.cancel=function(){"undefined"!=typeof n&&(n(),n=void 0)},"function"!=typeof e)throw new Error("GeoCallbackRegistration.cancel() callback must be a function.");var n=e},n=12,t=function(e){function t(e){return new RSVP.Promise(function(n,t){var r;"string"!=typeof e&&"number"!=typeof e&&(r="key must be a string or a number"),void 0!==r?t("Error: Invalid key '"+e+"': "+r):n()})}function r(e){return new RSVP.Promise(function(n,t){var r;if(null===e&&n(),"[object Array]"!==Object.prototype.toString.call(e)||2!==e.length)r="expected 2 values, got "+e.length;else{var i=e[0],o=e[1];"number"!=typeof i?r="latitude must be a number":-90>i||i>90?r="latitude must be within the range [-90, 90]":"number"!=typeof o?r="longitude must be a number":(-180>o||o>180)&&(r="longitude must be within the range [-180, 180]")}void 0!==r?t("Error: Invalid location ["+e+"]: "+r):n()})}function i(e,t){return new RSVP.Promise(function(r,i){null===t&&r(),c.child("indices/"+o(t,n)+e).set(!0,function(e){e?i("Error: Firebase synchronization failed: "+e):r()})})}function a(e,t){function r(){return new RSVP.Promise(function(t,r){void 0!==f[e]?c.child("indices/"+o(f[e].split(",").map(Number),n)+e).remove(function(e){e?r("Error: Firebase synchronization failed: "+e):t()}):t()})}function i(){return new RSVP.Promise(function(n,r){c.child("locations/"+e).set(t?t.toString():null,function(e){e?r("Error: Firebase synchronization failed: "+e):n()})})}return r().then(function(){return i()})}this.set=function(e,n){return RSVP.all([t(e),r(n)]).then(function(){return a(e.toString(),n)}).then(function(){return i(e.toString(),n)})},this.get=function(e){return t(e).then(function(){return new RSVP.Promise(function(n,t){c.child("locations/"+e.toString()).once("value",function(e){n(e.val()?e.val().split(",").map(Number):null)},function(e){t("Error: Firebase synchronization failed: "+e)})})})},this.remove=function(e){return this.set(e,null)},this.query=function(e){return new u(c,e)};var c=e,f={};c.child("locations").on("child_added",function(e){f[e.name()]=e.val()}),c.child("locations").on("child_removed",function(e){delete f[e.name()]})},r=function(e){return e*Math.PI/180},i=function(e,n){var t,i,o=e[0],u=e[1],a=n[0],c=n[1],f=6371,d=r(a-o),s=r(c-u);return t=Math.sin(d/2)*Math.sin(d/2)+Math.cos(r(o))*Math.cos(r(a))*Math.sin(s/2)*Math.sin(s/2),i=2*Math.atan2(Math.sqrt(t),Math.sqrt(1-t)),f*i},o=function(e,n){var t={min:-90,max:90},r={min:-180,max:180},i=e[0],o=e[1],u="",a=0,c=0,f=1;if(n=Math.min(n||12,22),i<t.min||i>t.max)throw new Error("Invalid latitude specified in encodeGeohash(): "+i);if(o<r.min||o>r.max)throw new Error("Invalid longitude specified in encodeGeohash(): "+o);for(;u.length<n;){var d=f?o:i,s=f?r:t,l=(s.min+s.max)/2;d>l?(a=(a<<1)+1,s.min=l):(a=(a<<1)+0,s.max=l),f=!f,4>c?c++:(c=0,u+="0123456789bcdefghjkmnpqrstuvwxyz"[a],a=0)}return u},u=function(t,r){function u(e){for(var t in e)if(e.hasOwnProperty(t)&&"center"!==t&&"radius"!==t)throw new Error('Unexpected "'+t+'" attribute found in query criteria.');if("undefined"!=typeof e.center){if(!(e.center instanceof Array&&2===e.center.length))throw new Error('Invalid "center" attribute specified for query criteria. Expected array of length 2, got '+e._center.length);var r=e.center[0],i=e.center[1];if("number"!=typeof r)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be a number.');if(-90>r||r>90)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be within the range [-90, 90].');if("number"!=typeof i)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be a number.');if(-180>i||i>180)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be within the range [-180, 180].')}if("undefined"!=typeof e.radius){if("number"!=typeof e.radius)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be a number.');if(e.radius<0)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be greater than or equal to 0.')}c=e.center||c,d=o(c,n),f=e.radius||f}function a(e,n){var t=i(n,c),r=void 0!==h[e],o=f>=t;!r&&o?(l.key_entered.forEach(function(r){r(e,n,t)}),h[e]=n):r&&!o?(l.key_exited.forEach(function(r){r(e,n,t)}),delete h[e]):r&&(l.key_moved.forEach(function(r){r(e,n,t)}),h[e]=n)}if(this.results=function(){return new RSVP.Promise(function(e){var n=[];for(var t in h)h.hasOwnProperty(t)&&n.push({key:t,location:h[t]});e(n)})},this.on=function(n,t){if(-1===["key_entered","key_exited","key_moved"].indexOf(n))throw new Error('Event type must be "key_entered", "key_exited", or "key_moved"');if("function"!=typeof t)throw new Error("Event callback must be a function.");if(l[n].push(t),"key_entered"===n)for(var r in h)h.hasOwnProperty(r)&&t(r,h[r],i(h[r],c));return new e(function(){l[n].splice(l[n].indexOf(t),1)})},this.cancel=function(){l={key_entered:[],key_exited:[],key_moved:[]},s.child("indices").off("child_added"),s.child("locations").off("child_removed")},this.updateCriteria=function(e){u(e);for(var n in m)m.hasOwnProperty(n)&&a(n,m[n])},this.center=function(){return c},this.radius=function(){return f},"undefined"==typeof r.center)throw new Error('No "center" attribute specified for query criteria.');if("undefined"==typeof r.radius)throw new Error('No "radius" attribute specified for query criteria.');var c,f,d,s=t,l={key_entered:[],key_exited:[],key_moved:[]},h={},m={};u(r),s.child("indices").on("child_added",function(e){var t=e.name(),r=t.slice(n);s.child("locations/"+r).once("value",function(e){var n=e.val().split(",").map(Number);m[r]=n,a(r,n)})}),s.child("locations").on("child_removed",function(e){var n=e.name();if(void 0!==h[n]){var t=i(h[n],c);l.key_exited.forEach(function(e){e(n,m[n],t)}),delete m[n]}})};return t}();"undefined"!=typeof module&&(module.exports=GeoFire);