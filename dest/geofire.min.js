var GeoFire=function(){"use strict";var e=function(e){if(this.cancel=function(){"undefined"!=typeof n&&(n(),n=void 0)},"function"!=typeof e)throw new Error("GeoCallbackRegistration.cancel() callback must be a function.");var n=e},n=12,r=function(e){function r(e){return new RSVP.Promise(function(n,r){var t;"string"!=typeof e&&"number"!=typeof e&&(t="key must be a string or a number"),void 0!==t?r('Error: Invalid key "'+e+'": '+t):n()})}function t(e){return new RSVP.Promise(function(n,r){var t;if(null===e&&n(),"[object Array]"!==Object.prototype.toString.call(e)||2!==e.length)t="expected 2 values, got "+e.length;else{var i=e[0],o=e[1];"number"!=typeof i?t="latitude must be a number":-90>i||i>90?t="latitude must be within the range [-90, 90]":"number"!=typeof o?t="longitude must be a number":(-180>o||o>180)&&(t="longitude must be within the range [-180, 180]")}void 0!==t?r("Error: Invalid location ["+e+"]: "+t):n()})}function i(e,r){return new RSVP.Promise(function(t,i){d.child("locations/"+e).once("value",function(u){var a=u.val();null===a?t(null!==r):(a=a.split(",").map(Number),null!==r&&r[0]===a[0]&&r[1]===a[1]&&t(!1),d.child("indices/"+o(a,n)+e).remove(function(e){e?i("Error: Firebase synchronization failed: "+e):t(!0)}))},function(e){i("Error: Firebase synchronization failed: "+e)})})}function a(e,n){return new RSVP.Promise(function(r,t){d.child("locations/"+e).set(n?n.toString():null,function(e){e?t("Error: Firebase synchronization failed: "+e):r()})})}function c(e,r){return new RSVP.Promise(function(t,i){null===r?t():d.child("indices/"+o(r,n)+e).set(!0,function(e){e?i("Error: Firebase synchronization failed: "+e):t()})})}function f(e){return new RSVP.Promise(function(n,r){d.child("locations/"+e.toString()).once("value",function(e){n(e.val()?e.val().split(",").map(Number):null)},function(e){r("Error: Firebase synchronization failed: "+e)})})}this.set=function(e,n){return new RSVP.all([r(e),t(n)]).then(function(){return i(e,n)}).then(function(r){return r?new RSVP.all([a(e,n),c(e,n)]):new RSVP.Promise(function(e){e()})})},this.get=function(e){return r(e).then(function(){return f(e)})},this.remove=function(e){return this.set(e,null)},this.query=function(e){return new u(d,e)};var d=e},t=function(e){return e*Math.PI/180},i=function(e,n){var r,i,o=e[0],u=e[1],a=n[0],c=n[1],f=6371,d=t(a-o),s=t(c-u);return r=Math.sin(d/2)*Math.sin(d/2)+Math.cos(t(o))*Math.cos(t(a))*Math.sin(s/2)*Math.sin(s/2),i=2*Math.atan2(Math.sqrt(r),Math.sqrt(1-r)),f*i},o=function(e,n){var r={min:-90,max:90},t={min:-180,max:180},i=e[0],o=e[1],u="",a=0,c=0,f=1;if(n=Math.min(n||12,22),i<r.min||i>r.max)throw new Error("Invalid latitude specified in encodeGeohash(): "+i);if(o<t.min||o>t.max)throw new Error("Invalid longitude specified in encodeGeohash(): "+o);for(;u.length<n;){var d=f?o:i,s=f?t:r,l=(s.min+s.max)/2;d>l?(a=(a<<1)+1,s.min=l):(a=(a<<1)+0,s.max=l),f=!f,4>c?c++:(c=0,u+="0123456789bcdefghjkmnpqrstuvwxyz"[a],a=0)}return u},u=function(r,t){function u(e){for(var r in e)if(e.hasOwnProperty(r)&&"center"!==r&&"radius"!==r)throw new Error('Unexpected "'+r+'" attribute found in query criteria.');if("undefined"!=typeof e.center){if(!(e.center instanceof Array&&2===e.center.length))throw new Error('Invalid "center" attribute specified for query criteria. Expected array of length 2, got '+e._center.length);var t=e.center[0],i=e.center[1];if("number"!=typeof t)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be a number.');if(-90>t||t>90)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be within the range [-90, 90].');if("number"!=typeof i)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be a number.');if(-180>i||i>180)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be within the range [-180, 180].')}if("undefined"!=typeof e.radius){if("number"!=typeof e.radius)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be a number.');if(e.radius<0)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be greater than or equal to 0.')}c=e.center||c,d=o(c,n),f=e.radius||f}function a(e,n){var r=i(n,c),t=void 0!==h[e],o=f>=r;!t&&o?(l.key_entered.forEach(function(t){t(e,n,r)}),h[e]=n):t&&!o?(l.key_exited.forEach(function(t){t(e,n,r)}),delete h[e]):t&&(l.key_moved.forEach(function(t){t(e,n,r)}),h[e]=n)}if(this.results=function(){return new RSVP.Promise(function(e){var n=[];for(var r in h)h.hasOwnProperty(r)&&n.push({key:r,location:h[r]});e(n)})},this.on=function(n,r){if(-1===["key_entered","key_exited","key_moved"].indexOf(n))throw new Error('Event type must be "key_entered", "key_exited", or "key_moved"');if("function"!=typeof r)throw new Error("Event callback must be a function.");if(l[n].push(r),"key_entered"===n)for(var t in h)h.hasOwnProperty(t)&&r(t,h[t],i(h[t],c));return new e(function(){l[n].splice(l[n].indexOf(r),1)})},this.cancel=function(){l={key_entered:[],key_exited:[],key_moved:[]},s.child("indices").off("child_added"),s.child("locations").off("child_removed")},this.updateCriteria=function(e){u(e);for(var n in m)m.hasOwnProperty(n)&&a(n,m[n])},this.center=function(){return c},this.radius=function(){return f},"undefined"==typeof t.center)throw new Error('No "center" attribute specified for query criteria.');if("undefined"==typeof t.radius)throw new Error('No "radius" attribute specified for query criteria.');var c,f,d,s=r,l={key_entered:[],key_exited:[],key_moved:[]},h={},m={};u(t),s.child("indices").on("child_added",function(e){var r=e.name(),t=r.slice(n);s.child("locations/"+t).once("value",function(e){var n=e.val().split(",").map(Number);m[t]=n,a(t,n)})}),s.child("locations").on("child_removed",function(e){var n=e.name();if(void 0!==h[n]){var r=i(h[n],c);l.key_exited.forEach(function(e){e(n,m[n],r)}),delete m[n]}})};return r}();"undefined"!=typeof module&&(module.exports=GeoFire);