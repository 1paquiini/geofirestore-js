if("undefined"!=typeof module&&"undefined"!=typeof process)var RSVP=require("RSVP");var GeoFire=function(){"use strict";var e=function(e){if(this.cancel=function(){"undefined"!=typeof n&&(n(),n=void 0)},"function"!=typeof e)throw new Error("GeoCallbackRegistration.cancel() callback must be a function.");var n=e},n=function(e){function n(e,n){return new RSVP.Promise(function(r,o){u.child("l/"+e).once("value",function(i){var a=i.val();null===a?r(null!==n):(a=a.split(",").map(Number),null!==n&&n[0]===a[0]&&n[1]===a[1]?r(!1):u.child("i/"+d(a,t)+e).remove(function(e){e?o("Error: Firebase synchronization failed: "+e):r(!0)}))},function(e){o("Error: Firebase synchronization failed: "+e)})})}function r(e,n){return new RSVP.Promise(function(t,r){u.child("l/"+e).set(n?n.toString():null,function(e){e?r("Error: Firebase synchronization failed: "+e):t()})})}function o(e,n){return new RSVP.Promise(function(r,o){null===n?r():u.child("i/"+d(n,t)+e).set(!0,function(e){e?o("Error: Firebase synchronization failed: "+e):r()})})}function i(e){return new RSVP.Promise(function(n,t){u.child("l/"+e).once("value",function(e){n(e.val()?e.val().split(",").map(Number):null)},function(e){t("Error: Firebase synchronization failed: "+e)})})}this.set=function(e,t){return a(e),null!==t&&s(t),n(e,t).then(function(n){return n===!0?new RSVP.all([r(e,t),o(e,t)]):new RSVP.Promise(function(e){e()})})},this.get=function(e){return a(e),i(e)},this.remove=function(e){return this.set(e,null)},this.query=function(e){return new m(u,e)};var u=e},t=12,r="0123456789bcdefghjkmnpqrstuvwxyz",o={north:{even:"p0r21436x8zb9dcf5h7kjnmqesgutwvy",odd:"bc01fg45238967deuvhjyznpkmstqrwx"},east:{even:"bc01fg45238967deuvhjyznpkmstqrwx",odd:"p0r21436x8zb9dcf5h7kjnmqesgutwvy"},south:{even:"14365h7k9dcfesgujnmqp0r2twvyx8zb",odd:"238967debc01fg45kmstqrwxuvhjyznp"},west:{even:"238967debc01fg45kmstqrwxuvhjyznp",odd:"14365h7k9dcfesgujnmqp0r2twvyx8zb"}},i={north:{even:"prxz",odd:"bcfguvyz"},east:{even:"bcfguvyz",odd:"prxz"},south:{even:"028b",odd:"0145hjnp"},west:{even:"0145hjnp",odd:"028b"}},a=function(e){var n;if("string"!=typeof e?n="key must be a string":0===e.length?n="key cannot be the empty string":1+t+e.length>755?n="key is too long to be stored in Firebase":[".","$","[","]","#"].forEach(function(t){-1!==e.indexOf(t)&&(n='key cannot contain "'+t+'" character')}),"undefined"!=typeof n)throw new Error('Invalid GeoFire key "'+e+'": '+n)},s=function(e){var n;if("[object Array]"!==Object.prototype.toString.call(e))n="location must be an array";else if(2!==e.length)n="expected array of length 2, got length "+e.length;else{var t=e[0],r=e[1];"number"!=typeof t?n="latitude must be a number":-90>t||t>90?n="latitude must be within the range [-90, 90]":"number"!=typeof r?n="longitude must be a number":(-180>r||r>180)&&(n="longitude must be within the range [-180, 180]")}if("undefined"!=typeof n)throw new Error('Invalid GeoFire location "['+e+']": '+n)},u=function(e){var n;if("string"!=typeof e)n="geohash must be a string";else if(0===e.length)n="geohash cannot be the empty string";else for(var t=0,o=e.length;o>t;++t)-1===r.indexOf(e[t])&&(n='geohash cannot contain "'+e[t]+'"');if("undefined"!=typeof n)throw new Error('Invalid GeoFire geohash "'+e+'": '+n)},c=function(e){if("number"!=typeof e)throw new Error("Error: degrees must be a number");return e*Math.PI/180},l=function(e,n){s(e),s(n);var t=6371,r=c(n[0]-e[0]),o=c(n[1]-e[1]),i=Math.sin(r/2)*Math.sin(r/2)+Math.cos(c(e[0]))*Math.cos(c(n[0]))*Math.sin(o/2)*Math.sin(o/2),a=2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i));return t*a},d=function(e,n){if(s(e),"undefined"!=typeof n){if("number"!=typeof n)throw new Error("precision must be a number");if(0>=n)throw new Error("precision must be greater than 0");if(n>22)throw new Error("precision cannot be greater than 22");if(Math.round(n)!==n)throw new Error("precision must be an integer")}n=n||t;for(var o={min:-90,max:90},i={min:-180,max:180},a="",u=0,c=0,l=1;a.length<n;){var d=l?e[1]:e[0],f=l?i:o,h=(f.min+f.max)/2;d>h?(u=(u<<1)+1,f.min=h):(u=(u<<1)+0,f.max=h),l=!l,4>c?c++:(c=0,a+=r[u],u=0)}return a},f=function(e,n){if(u(e),-1===["north","south","east","west"].indexOf(n))throw new Error('Error: direction must be one of "north", "south", "east", or "west"');var t=e.charAt(e.length-1),a=e.length%2?"odd":"even",s=e.substring(0,e.length-1);if(-1!==i[n][a].indexOf(t)){if(s.length<=0)return"";s=f(s,n)}return s+r[o[n][a].indexOf(t)]},h=function(e){u(e);var n=[];return n.push(f(e,"north")),n.push(f(e,"south")),n.push(f(e,"east")),n.push(f(e,"west")),""!==n[0]&&(n.push(f(n[0],"east")),n.push(f(n[0],"west"))),""!==n[1]&&(n.push(f(n[1],"east")),n.push(f(n[1],"west"))),n},m=function(n,r){function o(e){for(var n in e)if(e.hasOwnProperty(n)&&"center"!==n&&"radius"!==n)throw new Error('Unexpected "'+n+'" attribute found in query criteria.');if("undefined"!=typeof e.center&&s(e.center),"undefined"!=typeof e.radius){if("number"!=typeof e.radius)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be a number.');if(e.radius<0)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be greater than or equal to 0.')}c=e.center||c,f=e.radius||f}function i(e,n){console.assert("undefined"!=typeof g[e],"Location should be in location queried dictionary");var t=l(n,c),r=g[e].isInQuery===!0,o=f>=t;g[e].distanceFromCenter=t,g[e].isInQuery=o,!r&&o&&y.key_entered.forEach(function(r){r(e,n,t)}),v>0&&(v--,p&&0===v&&y.ready.forEach(function(e){e()}))}function a(e){var n=m.child("l/"+e).on("value",function(t){var r=t.val()?t.val().split(",").map(Number):null;"undefined"==typeof g[e]||g[e].isInQuery===!1?null===r?(m.child("l/"+e).off("value",g[e].valueCallback),delete g[e]):(g[e]={location:r,isInQuery:!1,valueCallback:n},i(e,r)):(null===r||r[0]!==g[e].location[0]||r[1]!==g[e].location[1])&&(g[e].location=r,g[e].distanceFromCenter=null===r?null:l(r,c),g[e].isInQuery=null===r?!1:g[e].distanceFromCenter<=f,g[e].isInQuery?y.key_moved.forEach(function(n){n(e,r,g[e].distanceFromCenter)}):(y.key_exited.forEach(function(n){n(e,r,g[e].distanceFromCenter)}),null===r&&(m.child("l/"+e).off("value",g[e].valueCallback),delete g[e])))})}function u(){console.groupCollapsed("_listenForNewGeohashes()"),console.time("TOTAL _listenForNewGeohashes()"),console.time("Get center hash at zoom level");for(var e=[null,5003.771699005143,625.4714623756429,156.36786559391072,19.54598319923884,4.88649579980971,.6108119749762138],n=6;f>e[n];)n-=1;var r=d(c,t).substring(0,n);console.timeEnd("Get center hash at zoom level"),console.time("neighbors()");var o=h(r);o.push(r),console.timeEnd("neighbors()"),console.time("Filter out duplicates"),o=o.filter(function(e,n){return e.length>0&&o.indexOf(e)===n}),console.timeEnd("Filter out duplicates"),console.time("Compare to current geohashes queried"),console.log(o.length),console.log(o),console.log(b);for(var i in b)if(b.hasOwnProperty(i)){var s=o.indexOf(i);-1===s?(window.setTimeout(function(){m.child("i").off("child_added",b[i])}),delete b[i]):o.splice(s,1)}console.timeEnd("Compare to current geohashes queried"),console.groupCollapsed("Query geohashes"),console.log(o),console.time("TOTAL Query geohashes");for(var u=0,l=0,w=o.length;w>l;++l){console.groupCollapsed("Querying geohash "+l),console.time("TOTAL Querying geohash "+l),console.time("Getting prefixes");var E=o[l].substring(0,n),k=E+"~";console.timeEnd("Getting prefixes"),console.time("Get firebase query");var x=m.child("i").startAt(null,E).endAt(null,k);console.timeEnd("Get firebase query"),console.time("childAddedCallback");var _=x.on("child_added",function(e){p||v++;var n=e.name().slice(t);"undefined"==typeof g[n]&&a(n)});console.timeEnd("childAddedCallback"),console.time("once value"),b[E]=_,x.once("value",function(){u++,p=u===o.length,p&&0===v&&y.ready.forEach(function(e){e()})}),console.timeEnd("once value"),console.timeEnd("Querying geohash "+l),console.groupEnd("Querying geohash "+l)}console.timeEnd("TOTAL Query geohashes"),console.groupEnd("Query geohashes"),console.timeEnd("TOTAL _listenForNewGeohashes()"),console.groupEnd("_listenForNewGeohashes()")}this.center=function(){return c},this.radius=function(){return f},this.updateCriteria=function(e){console.group("updateCriteria()"),console.time("TOTAL updateCriteria()"),console.time("_saveCriteria()"),o(e),console.timeEnd("_saveCriteria()"),console.time('Fire "key_exited" and "key_entered"');for(var n in g)if(g.hasOwnProperty(n)){var t=g[n];if(t.isInQuery){t.distanceFromCenter=l(t.location,c);var r=t.distanceFromCenter<=f;r||(y.key_exited.forEach(function(e){e(n,t.location,t.distanceFromCenter)}),g[n].isInQuery=!1)}else i(n,g[n].location)}console.timeEnd('Fire "key_exited" and "key_entered"'),console.time("_listenForNewGeohashes()"),p=!1,v=0,u(),console.timeEnd("_listenForNewGeohashes()"),console.timeEnd("TOTAL updateCriteria()"),console.groupEnd("updateCriteria()")},this.on=function(n,t){if(-1===["ready","key_entered","key_exited","key_moved"].indexOf(n))throw new Error('Event type must be "key_entered", "key_exited", or "key_moved"');if("function"!=typeof t)throw new Error("Event callback must be a function.");if(y[n].push(t),"key_entered"===n)for(var r in g)if(g.hasOwnProperty(r)){var o=g[r];o.isInQuery&&t(r,o.location,o.distanceFromCenter)}return"ready"===n&&p&&t(),new e(function(){y[n].splice(y[n].indexOf(t),1)})},this.cancel=function(){y={ready:[],key_entered:[],key_exited:[],key_moved:[]};for(var e in b)b.hasOwnProperty(e)&&m.child("i").off("child_added",b[e]);for(var n in g)g.hasOwnProperty(n)&&(m.child("l/"+n).off("value",g[n].valueCallback),delete g[n])};var c,f,m=n,y={ready:[],key_entered:[],key_exited:[],key_moved:[]},p=!1,v=0,g={},b={};if("undefined"==typeof r.center)throw new Error('No "center" attribute specified for query criteria.');if("undefined"==typeof r.radius)throw new Error('No "radius" attribute specified for query criteria.');o(r),u()};return n}();"undefined"!=typeof module&&(module.exports=GeoFire);