// geoFire is a helper library for location-based operations in Firebase.
// It provides functions to store data for location querying in Firebase,
// and perform location queries such as location updates and localized searches.
// geoFire stores the location coordinates of a data point as a geohash
// (http://en.wikipedia.org/wiki/Geohash) in Firebase.

var GeoFire = (function() {

function encode(n,e){var t,r,d,a=n[0],i=n[1],o="",h=0,u=0,m=1,c={min:-90,max:90},f={min:-180,max:180};if(e=Math.min(e||12,22),a<c.min||a>c.max)throw"Invalid latitude specified! ("+a+")";if(i<f.min||i>f.max)throw"Invalid longitude specified! ("+i+")";for(;o.length<e;)t=m?i:a,r=m?f:c,d=(r.min+r.max)/2,t>d?(h=(h<<1)+1,r.min=d):(h=(h<<1)+0,r.max=d),m=!m,4>u?u++:(u=0,o+=BASE32[h].toString(),h=0);return o}function halve_interval(n,e,t){var r=(n.min+n.max)/2;e&t?n.min=r:n.max=r}function decode(n){for(var e,t,r,d,a,i={min:-90,max:90},o={min:-180,max:180},h=1,u=0;u<n.length;u++){r=BASE32.indexOf(n[u]);for(var m=0;5>m;m++)a=h?o:i,d=BITS[m],halve_interval(a,r,d),h=!h}return e=(i.min+i.max)/2,t=(o.min+o.max)/2,[e,t]}function deg2rad(n){return n*Math.PI/180}function rad2deg(n){return 180*n/Math.PI}function rad2km(n){return 6371*n}function deg2km(n){return rad2km(deg2rad(n))}function miles2km(n){return 1.60934*n}function km2miles(n){return.621371*n}function dist(n,e,t,r){var d,a,i=6371,o=deg2rad(t-n),h=deg2rad(r-e);return d=Math.sin(o/2)*Math.sin(o/2)+Math.cos(deg2rad(n))*Math.cos(deg2rad(t))*Math.sin(h/2)*Math.sin(h/2),a=2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),i*a}function distByHash(n,e){var t=decode(n),r=decode(e);return dist(t[0],t[1],r[0],r[1])}function dimensions(n){var e=n.length,t=e%2?1:0,r=5*e-t;return{height:deg2km(180/Math.pow(2,r/2)),width:deg2km(180/Math.pow(2,(r-1)/2))}}function neighbor(n,e){n=n.toLowerCase();var t=n.charAt(n.length-1),r=n.length%2?"odd":"even",d=n.substring(0,n.length-1);if(-1!=BORDERS[e][r].indexOf(t)){if(d.length<=0)return"";d=neighbor(d,e)}return d+BASE32[NEIGHBORS[e][r].indexOf(t)]}function searchRadius(n,e){for(var t=[null,5003.771699005143,625.4714623756429,156.36786559391072,19.54598319923884,4.88649579980971,.6108119749762138],r=6;e>t[r];)r-=1}var geoEncode=function(){},BITS=[16,8,4,2,1],BASE32="0123456789bcdefghjkmnpqrstuvwxyz",NEIGHBORS={north:{even:"p0r21436x8zb9dcf5h7kjnmqesgutwvy",odd:"bc01fg45238967deuvhjyznpkmstqrwx"},east:{even:"bc01fg45238967deuvhjyznpkmstqrwx",odd:"p0r21436x8zb9dcf5h7kjnmqesgutwvy"},south:{even:"14365h7k9dcfesgujnmqp0r2twvyx8zb",odd:"238967debc01fg45kmstqrwxuvhjyznp"},west:{even:"238967debc01fg45kmstqrwxuvhjyznp",odd:"14365h7k9dcfesgujnmqp0r2twvyx8zb"}},BORDERS={north:{even:"prxz",odd:"bcfguvyz"},east:{even:"bcfguvyz",odd:"prxz"},south:{even:"028b",odd:"0145hjnp"},west:{even:"0145hjnp",odd:"028b"}},noop=function(){},onSearches={},onCallbacks={};
var validateKey=function(e){return console.log("validateKey("+e+")"),new RSVP.Promise(function(n,t){"string"!=typeof e&&t("Invalid key "+e+": key must be a string"),n()})},validateLocation=function(e){return console.log("validateLocation("+e+")"),new RSVP.Promise(function(n,t){e instanceof Array&&2!=e.length&&t("Invalid location "+e+": expected 2 parameters, got "+e.length);var o=e[0],i=e[1];"number"!=typeof o&&t("Invalid location "+e+": latitude must be a number"),"number"!=typeof i&&t("Invalid location "+e+": longitude must be a number"),(-90>o||o>90)&&t("Invalid location "+e+": latitude must be within range [-90, 90]"),(-180>i||i>180)&&t("Invalid location "+e+": longitude must be within range [-180, 180]"),n()})},updateFirebaseIndex=function(e,n,t){return console.log("updateFirebaseIndex("+n+","+t+")"),new RSVP.Promise(function(o,i){var r={},a=encode(t,12);r[a]=n,e.child("indices").update(r,function(e){e?i("Synchronization failed."):o()})})},updateFirebaseLocation=function(e,n,t){return console.log("updateFirebaseLocation("+n+","+t+")"),new RSVP.Promise(function(o,i){var r={};r[n]=t.toString(),e.child("locations").update(r,function(e){e?i("Synchronization failed."):o()})})},GeoQuery=function(e,n){var t=this;this._saveQueryCriteria(n),this._ref=e,this.getInitialResults().then(function(e){t.locations=e})};GeoQuery.prototype.getInitialResults=function(){var e=this;return new RSVP.Promise(function(n){var t=[];e._ref.child("indices").once("value",function(o){var i=o.val();for(var r in i)distByHash(e._centerHash,r)<=e._radius&&t.push(i[r]);n(t)})})},GeoQuery.prototype.onKeyEntered=function(){console.log("onKeyEntered()");var e=this;e._ref.child("locations").on("child_changed",function(n){console.log("child_changed");var t=n.name(),o=n.name();-1==e.locations.indexOf(t)&&dist(o[0],o[1],e._center[0],e._center[1])<=e._radius&&e.locations.push(t)})},GeoQuery.prototype.onKeyMoved=function(){},GeoQuery.prototype.onKeyLeft=function(){},GeoQuery.prototype.updateQueryCriteria=function(e){this._saveQueryCriteria(e)},GeoQuery.prototype.cancel=function(){},GeoQuery.prototype._saveQueryCriteria=function(e){this._type=e.type,this._center=e.center,this._centerHash=encode(e.center,12),this._radius=e.radius};var GeoCallbackRegistration=function(e){this._onCancel=e};GeoCallbackRegistration.prototype.cancel=function(){this._onCancel()&&(this._onCancel(),delete this._onCancel)};var GeoFire=function(e){this._ref=e};GeoFire.prototype.set=function(e,n){var t=this._ref;return validateKey(e).then(function(){validateLocation(n)}).then(function(){updateFirebaseIndex(t,e,n)}).then(function(){updateFirebaseLocation(t,e,n)})},GeoFire.prototype.get=function(e){var n=this._ref;return validateKey(e).then(function(){return new RSVP.Promise(function(t,o){n.child("locations/"+e).once("value",function(e){var n=e.val();t(n?e.val().split(",").map(Number):null)},function(e){o(e)})})})},GeoFire.prototype.query=function(e){return new GeoQuery(this._ref,e)};
return GeoFire;
})();

//Make sure this works in node.
if (typeof module !== "undefined") {
  module.exports = GeoFire;
}
