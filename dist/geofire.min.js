if("undefined"!=typeof module&&"undefined"!=typeof process)var RSVP=require("RSVP");var GeoFire=function(){"use strict";var e=function(e){if(this.cancel=function(){"undefined"!=typeof n&&(n(),n=void 0)},"function"!=typeof e)throw new Error("GeoCallbackRegistration.cancel() callback must be a function.");var n=e},n=function(e){function n(e){return new RSVP.Promise(function(n,t){var r;"string"!=typeof e&&(r="key must be a string"),void 0!==r?t('Error: Invalid key "'+e+'": '+r):n()})}function t(e){return new RSVP.Promise(function(n,t){var r;if(null===e)n();else{if("[object Array]"!==Object.prototype.toString.call(e)||2!==e.length)r="expected array of length 2, got "+e.length;else{var i=e[0],o=e[1];"number"!=typeof i?r="latitude must be a number":-90>i||i>90?r="latitude must be within the range [-90, 90]":"number"!=typeof o?r="longitude must be a number":(-180>o||o>180)&&(r="longitude must be within the range [-180, 180]")}void 0!==r?t("Error: Invalid location ["+e+"]: "+r):n()}})}function r(e,n){return new RSVP.Promise(function(t,r){s.child("l/"+e).once("value",function(i){var a=i.val();null===a?t(null!==n):(a=a.split(",").map(Number),null!==n&&n[0]===a[0]&&n[1]===a[1]?t(!1):s.child("i/"+l(a,o)+e).remove(function(e){e?r("Error: Firebase synchronization failed: "+e):t(!0)}))},function(e){r("Error: Firebase synchronization failed: "+e)})})}function i(e,n){return new RSVP.Promise(function(t,r){s.child("l/"+e).set(n?n.toString():null,function(e){e?r("Error: Firebase synchronization failed: "+e):t()})})}function a(e,n){return new RSVP.Promise(function(t,r){null===n?t():s.child("i/"+l(n,o)+e).set(!0,function(e){e?r("Error: Firebase synchronization failed: "+e):t()})})}function u(e){return new RSVP.Promise(function(n,t){s.child("l/"+e).once("value",function(e){n(e.val()?e.val().split(",").map(Number):null)},function(e){t("Error: Firebase synchronization failed: "+e)})})}this.set=function(e,o){return new RSVP.all([n(e),t(o)]).then(function(){return r(e,o)}).then(function(n){return n===!0?new RSVP.all([i(e,o),a(e,o)]):new RSVP.Promise(function(e){e()})})},this.get=function(e){return n(e).then(function(){return u(e)})},this.remove=function(e){return this.set(e,null)},this.query=function(e){return new d(s,e)};var s=e},t="0123456789bcdefghjkmnpqrstuvwxyz",r={north:{even:"p0r21436x8zb9dcf5h7kjnmqesgutwvy",odd:"bc01fg45238967deuvhjyznpkmstqrwx"},east:{even:"bc01fg45238967deuvhjyznpkmstqrwx",odd:"p0r21436x8zb9dcf5h7kjnmqesgutwvy"},south:{even:"14365h7k9dcfesgujnmqp0r2twvyx8zb",odd:"238967debc01fg45kmstqrwxuvhjyznp"},west:{even:"238967debc01fg45kmstqrwxuvhjyznp",odd:"14365h7k9dcfesgujnmqp0r2twvyx8zb"}},i={north:{even:"prxz",odd:"bcfguvyz"},east:{even:"bcfguvyz",odd:"prxz"},south:{even:"028b",odd:"0145hjnp"},west:{even:"0145hjnp",odd:"028b"}},o=12,a=function(e){return e*Math.PI/180},u=function(e,n){var t=6371,r=a(n[0]-e[0]),i=a(n[1]-e[1]),o=Math.sin(r/2)*Math.sin(r/2)+Math.cos(a(e[0]))*Math.cos(a(n[0]))*Math.sin(i/2)*Math.sin(i/2),u=2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o));return t*u},s=function(e,n){var o=e.charAt(e.length-1),a=e.length%2?"odd":"even",u=e.substring(0,e.length-1);if(-1!==i[n][a].indexOf(o)){if(u.length<=0)return"";u=s(u,n)}return u+t[r[n][a].indexOf(o)]},c=function(e){var n=[];return n.push(s(e,"north")),n.push(s(e,"south")),n.push(s(e,"east")),n.push(s(e,"west")),n.push(s(n[0],"east")),n.push(s(n[0],"west")),n.push(s(n[1],"east")),n.push(s(n[1],"west")),n},l=function(e,n){var r={min:-90,max:90},i={min:-180,max:180},o=e[0],a=e[1],u="",s=0,c=0,l=1;if(n=Math.min(n||12,22),o<r.min||o>r.max)throw new Error("Invalid latitude specified in encodeGeohash(): "+o);if(a<i.min||a>i.max)throw new Error("Invalid longitude specified in encodeGeohash(): "+a);for(;u.length<n;){var d=l?a:o,f=l?i:r,h=(f.min+f.max)/2;d>h?(s=(s<<1)+1,f.min=h):(s=(s<<1)+0,f.max=h),l=!l,4>c?c++:(c=0,u+=t[s],s=0)}return u},d=function(n,t){function r(e){for(var n in e)if(e.hasOwnProperty(n)&&"center"!==n&&"radius"!==n)throw new Error('Unexpected "'+n+'" attribute found in query criteria.');if("undefined"!=typeof e.center){if("[object Array]"!==Object.prototype.toString.call(e.center)||2!==e.center.length)throw new Error('Invalid "center" attribute specified for query criteria. Expected array of length 2, got '+e._center.length);var t=e.center[0],r=e.center[1];if("number"!=typeof t)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be a number.');if(-90>t||t>90)throw new Error('Invalid "center" attribute specified for query criteria. Latitude must be within the range [-90, 90].');if("number"!=typeof r)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be a number.');if(-180>r||r>180)throw new Error('Invalid "center" attribute specified for query criteria. Longitude must be within the range [-180, 180].')}if("undefined"!=typeof e.radius){if("number"!=typeof e.radius)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be a number.');if(e.radius<0)throw new Error('Invalid "radius" attribute specified for query criteria. Radius must be greater than or equal to 0.')}d=e.center||d,f=e.radius||f}function i(e,n){console.assert("undefined"!=typeof p[e],"Location should be in location queried dictionary");var t=u(n,d),r=p[e].isInQuery===!0,i=f>=t;p[e].distanceFromCenter=t,p[e].isInQuery=i,!r&&i&&m.key_entered.forEach(function(r){r(e,n,t)}),v>0&&(v--,y&&0===v&&m.ready.forEach(function(e){e()}))}function a(e){var n=h.child("l/"+e).on("value",function(t){var r=t.val()?t.val().split(",").map(Number):null;"undefined"==typeof p[e]||p[e].isInQuery===!1?null===r?(h.child("l/"+e).off("value",p[e].valueCallback),delete p[e]):(p[e]={location:r,isInQuery:!1,valueCallback:n},i(e,r)):(null===r||r[0]!==p[e].location[0]||r[1]!==p[e].location[1])&&(p[e].location=r,p[e].distanceFromCenter=null===r?null:u(r,d),p[e].isInQuery=null===r?!1:p[e].distanceFromCenter<=f,p[e].isInQuery?m.key_moved.forEach(function(n){n(e,r,p[e].distanceFromCenter)}):(m.key_exited.forEach(function(n){n(e,r,p[e].distanceFromCenter)}),null===r&&(h.child("l/"+e).off("value",p[e].valueCallback),delete p[e])))})}function s(){console.groupCollapsed("_listenForNewGeohashes()"),console.time("TOTAL _listenForNewGeohashes()"),console.time("Get center hash at zoom level");for(var e=[null,5003.771699005143,625.4714623756429,156.36786559391072,19.54598319923884,4.88649579980971,.6108119749762138],n=6;f>e[n];)n-=1;var t=l(d,o).substring(0,n);console.timeEnd("Get center hash at zoom level"),console.time("neighbors()");var r=c(t);r.push(t),console.timeEnd("neighbors()"),console.time("Filter out duplicates"),r=r.filter(function(e,n){return e.length>0&&r.indexOf(e)===n}),console.timeEnd("Filter out duplicates"),console.time("Compare to current geohashes queried"),console.log(r.length),console.log(r),console.log(g);for(var i in g)if(g.hasOwnProperty(i)){var u=r.indexOf(i);-1===u?(window.setTimeout(function(){h.child("i").off("child_added",g[i])}),delete g[i]):r.splice(u,1)}console.timeEnd("Compare to current geohashes queried"),console.groupCollapsed("Query geohashes"),console.log(r),console.time("TOTAL Query geohashes");for(var s=0,b=0,w=r.length;w>b;++b){console.groupCollapsed("Querying geohash "+b),console.time("TOTAL Querying geohash "+b),console.time("Getting prefixes");var E=r[b].substring(0,n),k=E+"~";console.timeEnd("Getting prefixes"),console.time("Get firebase query");var x=h.child("i").startAt(null,E).endAt(null,k);console.timeEnd("Get firebase query"),console.time("childAddedCallback");var _=x.on("child_added",function(e){y||v++;var n=e.name().slice(o);"undefined"==typeof p[n]&&a(n)});console.timeEnd("childAddedCallback"),console.time("once value"),g[E]=_,x.once("value",function(){s++,y=s===r.length,y&&0===v&&m.ready.forEach(function(e){e()})}),console.timeEnd("once value"),console.timeEnd("Querying geohash "+b),console.groupEnd("Querying geohash "+b)}console.timeEnd("TOTAL Query geohashes"),console.groupEnd("Query geohashes"),console.timeEnd("TOTAL _listenForNewGeohashes()"),console.groupEnd("_listenForNewGeohashes()")}this.center=function(){return d},this.radius=function(){return f},this.updateCriteria=function(e){console.group("updateCriteria()"),console.time("TOTAL updateCriteria()"),console.time("_saveCriteria()"),r(e),console.timeEnd("_saveCriteria()"),console.time('Fire "key_exited" and "key_entered"');for(var n in p)if(p.hasOwnProperty(n)){var t=p[n];if(t.isInQuery){t.distanceFromCenter=u(t.location,d);var o=t.distanceFromCenter<=f;o||(m.key_exited.forEach(function(e){e(n,t.location,t.distanceFromCenter)}),p[n].isInQuery=!1)}else i(n,p[n].location)}console.timeEnd('Fire "key_exited" and "key_entered"'),console.time("_listenForNewGeohashes()"),y=!1,v=0,s(),console.timeEnd("_listenForNewGeohashes()"),console.timeEnd("TOTAL updateCriteria()"),console.groupEnd("updateCriteria()")},this.on=function(n,t){if(-1===["ready","key_entered","key_exited","key_moved"].indexOf(n))throw new Error('Event type must be "key_entered", "key_exited", or "key_moved"');if("function"!=typeof t)throw new Error("Event callback must be a function.");if(m[n].push(t),"key_entered"===n)for(var r in p)if(p.hasOwnProperty(r)){var i=p[r];i.isInQuery&&t(r,i.location,i.distanceFromCenter)}return"ready"===n&&y&&t(),new e(function(){m[n].splice(m[n].indexOf(t),1)})},this.cancel=function(){m={ready:[],key_entered:[],key_exited:[],key_moved:[]};for(var e in g)g.hasOwnProperty(e)&&h.child("i").off("child_added",g[e]);for(var n in p)p.hasOwnProperty(n)&&(h.child("l/"+n).off("value",p[n].valueCallback),delete p[n])};var d,f,h=n,m={ready:[],key_entered:[],key_exited:[],key_moved:[]},y=!1,v=0,p={},g={};if("undefined"==typeof t.center)throw new Error('No "center" attribute specified for query criteria.');if("undefined"==typeof t.radius)throw new Error('No "radius" attribute specified for query criteria.');r(t),s()};return n}();"undefined"!=typeof module&&(module.exports=GeoFire);