/*!
 * GeoFire is an open-source library that allows you to store and query a set
 * of keys based on their geographic location. At its heart, GeoFire simply
 * stores locations with string keys. Its main benefit, however, is the
 * possibility of retrieving only those keys within a given geographic area -
 * all in realtime.
 *
 * GeoFire 0.0.0
 * https://github.com/firebase/geofire-js/
 * License: MIT
 */
if("undefined"!=typeof module&&"undefined"!=typeof process)var Firebase=require("firebase"),RSVP=require("rsvp");var GeoFire=function(){"use strict";function e(e,n){return y(e),v(n),{g:n,l:e}}function n(e){if(null!==e&&e.hasOwnProperty("l")&&Array.isArray(e.l)&&2===e.l.length)return e.l;throw new Error("Unexpected GeoFire location object encountered: "+JSON.stringify(e))}var r=function(e){if(this.cancel=function(){"undefined"!=typeof n&&(n(),n=void 0)},"function"!=typeof e)throw new Error("callback must be a function");var n=e},t=function(r){if(this.ref=function(){return t},this.set=function(n,r){return d(n),null!==r&&y(r),new RSVP.Promise(function(i,o){function a(e){e?o("Error: Firebase synchronization failed: "+e):i()}if(null===r)t.child(n).remove(a);else{var u=p(r);t.child(n).setWithPriority(e(r,u),u,a)}})},this.get=function(e){return d(e),new RSVP.Promise(function(r,i){t.child(e).once("value",function(e){r(null===e.val()?null:n(e.val()))},function(e){i("Error: Firebase synchronization failed: "+e)})})},this.remove=function(e){return this.set(e,null)},this.query=function(e){return new F(t,e)},"[object Object]"!==Object.prototype.toString.call(r))throw new Error("firebaseRef must be an instance of Firebase");var t=r};t.distance=function(e,n){y(e),y(n);var r=6371,t=b(n[0]-e[0]),i=b(n[1]-e[1]),o=Math.sin(t/2)*Math.sin(t/2)+Math.cos(b(e[0]))*Math.cos(b(n[0]))*Math.sin(i/2)*Math.sin(i/2),a=2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o));return r*a};var i=10,o="0123456789bcdefghjkmnpqrstuvwxyz",a=40007860,u=110574,f=5,c=22*f,l=6378137,s=.00669447819799,h=1e-12;Math.log2=Math.log2||function(e){return Math.log(e)/Math.log(2)};var d=function(e){var n;if("string"!=typeof e?n="key must be a string":0===e.length?n="key cannot be the empty string":1+i+e.length>755?n="key is too long to be stored in Firebase":/[\[\].#$\/\u0000-\u001F\u007F]/.test(e)&&(n="key cannot contain any of the following characters: . # $ ] [ /"),"undefined"!=typeof n)throw new Error("Invalid GeoFire key '"+e+"': "+n)},y=function(e){var n;if("[object Array]"!==Object.prototype.toString.call(e))n="location must be an array";else if(2!==e.length)n="expected array of length 2, got length "+e.length;else{var r=e[0],t=e[1];"number"!=typeof r||isNaN(r)?n="latitude must be a number":-90>r||r>90?n="latitude must be within the range [-90, 90]":"number"!=typeof t||isNaN(t)?n="longitude must be a number":(-180>t||t>180)&&(n="longitude must be within the range [-180, 180]")}if("undefined"!=typeof n)throw new Error("Invalid GeoFire location '"+e+"': "+n)},v=function(e){var n;if("string"!=typeof e)n="geohash must be a string";else if(0===e.length)n="geohash cannot be the empty string";else for(var r=0,t=e.length;t>r;++r)-1===o.indexOf(e[r])&&(n='geohash cannot contain "'+e[r]+'"');if("undefined"!=typeof n)throw new Error("Invalid GeoFire geohash '"+e+"': "+n)},m=function(e,n){if("object"!=typeof e)throw new Error("query criteria must be an object");if("undefined"==typeof e.center&&"undefined"==typeof e.radius)throw new Error("radius and/or center must be specified");if(n&&("undefined"==typeof e.center||"undefined"==typeof e.radius))throw new Error("query criteria for a new query must contain both a center and a radius");for(var r in e)if(e.hasOwnProperty(r)&&"center"!==r&&"radius"!==r)throw new Error("Unexpected attribute '"+r+"'' found in query criteria");if("undefined"!=typeof e.center&&y(e.center),"undefined"!=typeof e.radius){if("number"!=typeof e.radius||isNaN(e.radius))throw new Error("radius must be a number");if(e.radius<0)throw new Error("radius must be greater than or equal to 0")}},b=function(e){if("number"!=typeof e||isNaN(e))throw new Error("Error: degrees must be a number");return e*Math.PI/180},p=function(e,n){if(y(e),"undefined"!=typeof n){if("number"!=typeof n||isNaN(n))throw new Error("precision must be a number");if(0>=n)throw new Error("precision must be greater than 0");if(n>22)throw new Error("precision cannot be greater than 22");if(Math.round(n)!==n)throw new Error("precision must be an integer")}n=n||i;for(var r={min:-90,max:90},t={min:-180,max:180},a="",u=0,f=0,c=1;a.length<n;){var l=c?e[1]:e[0],s=c?t:r,h=(s.min+s.max)/2;l>h?(u=(u<<1)+1,s.min=h):(u=(u<<1)+0,s.max=h),c=!c,4>f?f++:(f=0,a+=o[u],u=0)}return a},w=function(e,n){var r=b(n),t=Math.cos(r)*l*Math.PI/180,i=1/Math.sqrt(1-s*Math.sin(r)*Math.sin(r)),o=t*i;return h>o?e>0?360:0:Math.min(360,e/o)},g=function(e,n){var r=w(e,n);return Math.abs(r)>1e-6?Math.max(1,Math.log2(360/r)):1},M=function(e){return Math.min(Math.log2(a/2/e),c)},k=function(e){if(180>=e&&e>=-180)return e;var n=e+180;return n>0?n%360-180:180- -n%360},E=function(e,n){var r=n/u,t=Math.min(90,e[0]+r),i=Math.max(-90,e[0]-r),o=2*Math.floor(M(n)),a=2*Math.floor(g(n,t))-1,f=2*Math.floor(g(n,i))-1;return Math.min(o,a,f,c)},x=function(e,n){var r=n/u,t=Math.min(90,e[0]+r),i=Math.max(-90,e[0]-r),o=w(n,t),a=w(n,i),f=Math.max(o,a);return[[e[0],e[1]],[e[0],k(e[1]-f)],[e[0],k(e[1]+f)],[t,e[1]],[t,k(e[1]-f)],[t,k(e[1]+f)],[i,e[1]],[i,k(e[1]-f)],[i,k(e[1]+f)]]},O=function(e,n){v(e);var r=Math.ceil(n/f);if(e.length<r)return[e,e+"~"];e=e.substring(0,r);var t=e.substring(0,e.length-1),i=o.indexOf(e.charAt(e.length-1)),a=n-t.length*f;if(0===a)return[t,t+"~"];var u=f-a,c=i>>u<<u,l=c+(1<<u);return l>31?[t+o[c],t+"~"]:[t+o[c],t+o[l]]},_=function(e,n){y(e);var r=Math.max(1,E(e,n)),t=Math.ceil(r/f),i=x(e,n),o=i.map(function(e){return O(p(e,t),r)});return o.filter(function(e,n){return!o.some(function(r,t){return n>t&&e[0]===r[0]&&e[1]===r[1]})})},F=function(e,o){function a(e,n,r,t){O[e].forEach(function(e){"undefined"==typeof r||null===r?e(n,null,null):e(n,r,t)})}function u(){O.ready.forEach(function(e){e()})}function f(e){var n=e.split(":");if(2!==n.length)throw new Error("Invalid internal state! Not a valid geohash query: "+e);return n}function c(e){if(2!==e.length)throw new Error("Not a valid geohash query: "+e);return e[0]+":"+e[1]}function l(e,n){var r=x.startAt(e[0]).endAt(e[1]);r.off("child_added",n.childAddedCallback),r.off("child_removed",n.childRemovedCallback),r.off("child_changed",n.childChangedCallback),r.off("value",n.valueCallback)}function s(){for(var e in I)if(I.hasOwnProperty(e)){var n=I[e];if(n.active===!1){var r=f(e);l(r,n),delete I[e]}}for(var t in P)if(P.hasOwnProperty(t)&&!d(P[t].geohash)){if(P[t].isInQuery)throw new Error("Internal State error, trying to remove location that is still in query");delete P[t]}C=!1,null!==q&&(clearTimeout(q),q=null)}function h(e,n){y(n);var r,o,u=P.hasOwnProperty(e)?P[e].isInQuery:!1,f=P.hasOwnProperty(e)?P[e].location:null;r=t.distance(n,N),o=A>=r,P[e]={location:n,distanceFromCenter:r,isInQuery:o,geohash:p(n,i)},o&&!u?a("key_entered",e,n,r):!o||null===f||n[0]===f[0]&&n[1]===f[1]?!o&&u&&a("key_exited",e,n,r):a("key_moved",e,n,r)}function d(e){for(var n in I)if(I.hasOwnProperty(n)){var r=f(n);if(e>=r[0]&&e<=r[1])return!0}return!1}function v(e,n){var r=P[e];if(delete P[e],"undefined"!=typeof r&&r.isInQuery){var i=n?t.distance(n,N):null;a("key_exited",e,n,i)}}function b(e){h(e.name(),n(e.val()))}function w(e){h(e.name(),n(e.val()))}function g(e){var r=e.name();P.hasOwnProperty(r)&&x.child(r).once("value",function(e){var t=null===e.val()?null:n(e.val()),i=null!==t?p(t):null;d(i)||v(r,t)})}function M(e){var n=E.indexOf(e);n>-1&&E.splice(n,1),F=0===E.length,F&&u()}function k(){var e=_(N,1e3*A).map(c);e=e.filter(function(n,r){return e.indexOf(n)===r});for(var n in I)if(I.hasOwnProperty(n)){var r=e.indexOf(n);-1===r?I[n].active=!1:(I[n].active=!0,e.splice(r,1))}C===!1&&Object.keys(I).length>25&&(C=!0,q=setTimeout(s,10)),E=e.slice(),e.forEach(function(e){var n=f(e),r=x.startAt(n[0]).endAt(n[1]),t=r.on("child_added",b),i=r.on("child_removed",g),o=r.on("child_changed",w),a=r.on("value",function(){r.off("value",a),M(e)});I[e]={active:!0,childAddedCallback:t,childRemovedCallback:i,childChangedCallback:o,valueCallback:a}}),0===e.length&&M()}if(this.center=function(){return N},this.radius=function(){return A},this.updateCriteria=function(e){m(e),N=e.center||N,A=e.radius||A;for(var n in P)if(P.hasOwnProperty(n)){var r=P[n],i=r.isInQuery;r.distanceFromCenter=t.distance(r.location,N),r.isInQuery=r.distanceFromCenter<=A,i&&!r.isInQuery?a("key_exited",n,r.location,r.distanceFromCenter):!i&&r.isInQuery&&a("key_entered",n,r.location,r.distanceFromCenter)}F=!1,k()},this.on=function(e,n){if(-1===["ready","key_entered","key_exited","key_moved"].indexOf(e))throw new Error('event type must be "ready", "key_entered", "key_exited", or "key_moved"');if("function"!=typeof n)throw new Error("callback must be a function");if(O[e].push(n),"key_entered"===e)for(var t in P)if(P.hasOwnProperty(t)){var i=P[t];i.isInQuery&&n(t,i.location,i.distanceFromCenter)}return"ready"===e&&F&&n(),new r(function(){O[e].splice(O[e].indexOf(n),1)})},this.cancel=function(){O={ready:[],key_entered:[],key_exited:[],key_moved:[]};for(var e in I)if(I.hasOwnProperty(e)){var n=f(e);l(n,I[e]),delete I[e]}P={},clearInterval(j)},"[object Object]"!==Object.prototype.toString.call(e))throw new Error("firebaseRef must be an instance of Firebase");var E,x=e,O={ready:[],key_entered:[],key_exited:[],key_moved:[]},F=!1,P={},I={},C=!1,q=null,j=setInterval(function(){C===!1&&s()},1e4);m(o,!0);var N=o.center,A=o.radius;k()};return t}();"undefined"!=typeof module&&"undefined"!=typeof process&&(module.exports=GeoFire);